{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","react_default","a","createElement","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","_this$props","this","Table_TableHeader","Table_TableBody","Component","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","value","setState","defineProperty","submitForm","handleSubmit","state","initialState","_this$state","type","onChange","Heading","App","characters","data","filter","i","character","toConsumableArray","concat","_this2","fetch","then","result","json","entry","className","App_Heading","src_Table","src_Form","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8420e328.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst TableHeader = () => (\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Job</th>\n    </tr>\n  </thead>\n);\n\nconst TableBody = (props) => {\n  const rows = props.characterData.map((row, index) => (\n    <tr key={index}>\n      <td>{row.name}</td>\n      <td>{row.job}</td>\n      <td><button onClick={() => props.removeCharacter(index)}>Delete</button></td>\n    </tr>\n  ));\n  return <tbody>{rows}</tbody>;\n};\n\nclass Table extends Component {\n  render() {\n    const { characterData, removeCharacter } = this.props;\n    return (\n      <table>\n        <TableHeader />\n        <TableBody\n          characterData={characterData}\n          removeCharacter={removeCharacter}\n        />\n      </table>\n    );\n  }\n}\n\nexport default Table;\n","import React, { Component } from 'react';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initialState = {\n      name: '',\n      job: '',\n    };\n    this.state = this.initialState;\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n  \n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state);\n    this.setState(this.initialState);\n  }\n\n  render() {\n    const { name, job } = this.state;\n\n    return (\n      <form>\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleChange} />\n        <label>Job</label>  \n        <input\n          type=\"text\"\n          name=\"job\"\n          value={job}\n          onChange={this.handleChange} />\n        <input\n          type=\"button\"\n          value=\"Submit\"\n          onClick={this.submitForm} />\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","//const heading = <h1 className=\"site-heading\">Hello, React</h1>;\nimport React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\nconst name = 'Tania';\nconst Heading = () => <h1>Hello, {name}</h1> ;\n\nclass App extends Component {\n  state = {\n    characters : [],\n    data: []\n  };\n\n  removeCharacter = index => {\n    const { characters } = this.state;\n  \n    this.setState({\n      characters: characters.filter((characters, i) => {\n        return i !== index;\n      }),\n    })\n  }  \n\n  componentDidMount(){\n    const url=\"https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*\";\n\n    fetch(url)\n      .then(result => result.json())\n      .then(result =>  {\n        this.setState({\n          data:result\n        })\n      });\n  }\n\n  render() {\n    const { data } = this.state;\n\n    const result = data.map((entry, index) => {\n      return <li key={index}>{entry}</li>\n    })\n\n    return (\n      <div className=\"container\">\n        <ul>{result}</ul>\n        <Heading />\n        <Table \n          characterData={this.state.characters}\n          removeCharacter={this.removeCharacter}\n        />\n        <Form handleSubmit={this.handleSubmit}/>\n      </div>\n    );\n  }\n\n  handleSubmit = character => {\n    this.setState({characters: [...this.state.characters, character]});\n  }\n}\n\nexport default App;\n\n/*\n{\n      name: 'Charlie',\n      job: 'Janitor',\n    },\n    {\n      name: 'Mac',\n      job: 'Bouncer',\n    },\n    {\n      name: 'Dee',\n      job: 'Aspiring actress',\n    },\n    {\n      name: 'Dennis',\n      job: 'Bartender',\n    }\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}